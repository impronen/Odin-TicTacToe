Players choose their markers

There is a grid, 3x3
Each cell in the grid needs to be represented in gameBoard array

Players in turn click the cells on the grid.
The game firs needs to check if the cell is empty.
If it is empty, the players marker is added to it. The gameBoard array is updated to contain players identifier

After that, the game checks if victory conditions are met.
These are: the player has three markers in a row.
Hard code the possible directions to the cell and iterate through the possible victory conditions after this move
If victory conditions are not met, check if the board is full => stalemate.
If neither => change player.

Repeat until victory conditions are met by player or board is full.


Further refinement: check if victory is still possible, if not => end game on stalemate.



--- gameController ---

gameController should include things that control the following:

1. who's turn it is
2. event listeners for the DOM side of gameBoard
3. feeding moves to the gameBoard (what is being clicked on as index and playerMark)
4. checks for victory condition - this might be possible / reasonable to divide 
    (ie. doing the checks inside gameBoard and returning those to gameController to fire
    a victory state for the game)


--- gameBoard ---

1. array for gameboard objects (ok)
2. function to change values there (ok)

-- Indexes for victory -- 

0 [1,2 / 4,8 / 3,6] ok
1 [0,2 / 4,7] ok 
2 [0,1 / 5,8] ok
3 [0,6 / 4,5] ok
4 [3,5 / 1,7 / 0,8] ok
5 [2,8 / 3,4] ok
6 [0,3 / 7,8] ok
7 [1,4 / 6,8] ok
8 [6,8 / 1,4] ok

//counting from indexes for squares
LEFT (0, 3 and 6) +1 and +2 (horizontal)
RIGHT (2, 5 and 8) -1 and -2 (horizontal)
CENTER (1, 4 and 7) -1 and +1 (horizontal)

MIDDLE (3, 4 and 5) -3 and +3 (vertical)
TOP (0, 1 and 2) +3 and +6 (vertical)
BOTTOM (6, 7 and 8) -3 and -6 (horizontal)


Perpendicular win
If 0, 4 and 8 match
or if 
6, 4 and 2 match



gameBoard.markChanger1(1, player2.playerMark);